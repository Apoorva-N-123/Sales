@{
    ViewBag.Title = "Product Type Edit and Delete";
}

<h2 style="background-color: #007bb5; color: white; padding: 15px; text-align: center; border-radius: 8px;">PRODUCT TYPE</h2>

<style>
    .header-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px;
    }

    .search-box {
        width: 200px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
    }

    .btn-add {
        background-color: #4caf50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: 0.3s;
    }

        .btn-add:hover {
            background-color: #45a049;
        }
    /* Add styles for the table, buttons, and modals */
    .grid-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px auto;
    }

        .grid-table th, .grid-table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        .grid-table th {
            background-color: black;
            color: white;
        }

        .grid-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .grid-table tr:hover {
            background-color: #f1f1f1;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .btn-edit {
        background-color: #ff9800;
        color: white;
    }

    .btn-delete {
        background-color: #f44336;
        color: white;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        max-width: 500px;
        width: 100%;
    }

    .modal-header {
        font-size: 20px;
        margin-bottom: 20px;
    }

    .modal-footer {
        display: flex;
        justify-content: space-between;
    }

    .back-btn {
        background-color: aquamarine; /* Warm Brown */
        color: black; /* White text */
        border: none; /* No border */
        padding: 5px 20px; /* Adjust spacing */
        border-radius: 5px; /* Rounded corners */
        font-size: 16px; /* Adjust font size */
        cursor: pointer; /* Pointer cursor on hover */
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
        transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transition */
    }

        .back-btn:hover {
            background-color: azure; /* Darker Brown for hover */
            transform: scale(1.05); /* Slightly larger on hover */
        }

        .back-btn:active {
            background-color: #6c4f29; /* Even darker Brown for active state */
            transform: scale(0.95); /* Slightly smaller on click */
        }
</style>

<div class="header-actions">
    <input type="text" id="searchBox" class="search-box" placeholder="Search by product...">
    <button class="btn-add" onclick="window.location.href='/ProductType/Create'">Add New Product Type</button>
</div>

<!-- Product Types Table -->
<table class="grid-table" id="gridTable">
    <thead>
        <tr>
            <th>Product Type Code</th>
            <th>Product Type Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var productType in Model)
        {
            <tr id="productType-@productType.ProductTypeId">
                <td>@productType.ProductTypeCode</td>
                <td>@productType.ProductTypeDescription</td>
                <td class="action-buttons">
                    <button class="btn btn-edit" onclick="openEditModal(@productType.ProductTypeId, '@productType.ProductTypeCode', '@productType.ProductTypeDescription')">Edit</button>
                    <button class="btn btn-delete" onclick="confirmDelete(@productType.ProductTypeId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button type="button" class="back-btn" onclick="location.href='@Url.Action("Success", "Account")'">
    Back
</button>
<!-- Modal for Edit -->
<div class="modal" id="editModal">
    <div class="modal-content">
        <div class="modal-header">Edit Product Type</div>
        <div class="modal-body">
            <div class="form-group">
                <label for="productTypeCode">Product Type Code</label>
                <input type="text" id="productTypeCode" class="form-control" />
            </div>
            <div class="form-group">
                <label for="productTypeDescription">Product Type Description</label>
                <input type="text" id="productTypeDescription" class="form-control" />
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-secondary" onclick="closeModal()">Cancel</button>
            <button class="btn btn-primary" onclick="saveChanges()">OK</button>
        </div>
    </div>
</div>

<!-- Confirmation Modal for Delete -->
<div class="modal" id="deleteModal">
    <div class="modal-content">
        <div class="modal-header">Confirm Delete</div>
        <div class="modal-body">
            Are you sure you want to delete this product type?
        </div>
        <div class="modal-footer">
            <button class="btn btn-secondary" onclick="closeModal()">Cancel</button>
            <button class="btn btn-danger" onclick="deleteProductType()">OK</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        // Search functionality
        $("#searchBox").on("input", function () {
            const searchValue = $(this).val().toLowerCase();
            $("#gridTable tbody tr").each(function () {
                const rowText = $(this).text().toLowerCase();
                $(this).toggle(rowText.indexOf(searchValue) > -1);
            });
        });

        var productTypeIdToDelete;
        var productTypeIdToEdit;

        // Function to open the edit modal
        function openEditModal(productTypeId, productTypeCode, productTypeDescription) {
            productTypeIdToEdit = productTypeId;
            document.getElementById('productTypeCode').value = productTypeCode;
            document.getElementById('productTypeDescription').value = productTypeDescription;
            document.getElementById('editModal').style.display = 'flex';
        }

        // Function to close modals
        function closeModal() {
            document.getElementById('editModal').style.display = 'none';
            document.getElementById('deleteModal').style.display = 'none';
        }

        // Function to save the changes made in the edit modal
        function saveChanges() {
            var productTypeCode = document.getElementById('productTypeCode').value;
            var productTypeDescription = document.getElementById('productTypeDescription').value;

            $.ajax({
                url: '@Url.Action("EditProductType", "ProductType")',
                type: 'POST',
                data: {
                    ProductTypeId: productTypeIdToEdit,
                    ProductTypeCode: productTypeCode,
                    ProductTypeDescription: productTypeDescription
                },
                success: function (response) {
                    if (response.success) {
                        var row = document.getElementById('productType-' + productTypeIdToEdit);
                        row.cells[0].innerText = productTypeCode;
                        row.cells[1].innerText = productTypeDescription;
                        closeModal();
                    } else {
                        alert('Failed to save changes');
                    }
                }
            });
        }

        // Function to confirm deletion
        function confirmDelete(productTypeId) {
            productTypeIdToDelete = productTypeId;
            document.getElementById('deleteModal').style.display = 'flex';
        }

        // Function to delete the product type
        function deleteProductType() {
            $.ajax({
                url: '@Url.Action("DeleteProductType", "ProductType")',
                type: 'POST',
                data: { ProductTypeId: productTypeIdToDelete },
                success: function (response) {
                    if (response.success) {
                        var row = document.getElementById('productType-' + productTypeIdToDelete);
                        row.parentNode.removeChild(row);
                        closeModal();
                    } else {
                        alert('Failed to delete product type');
                    }
                }
            });
        }
    </script>
}
