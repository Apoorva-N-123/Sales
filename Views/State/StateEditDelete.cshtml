@{
    ViewBag.Title = "State Edit and Delete";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
}

<h2 style="background-color: #007bb5; color: white; padding: 15px; text-align: center; border-radius: 8px;">STATE</h2>

<style>
    /* Layout Styling */
    .header-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px;
    }

    .search-box {
        width: 200px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
    }

    .btn-add {
        background-color: #4caf50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: 0.3s;
    }

        .btn-add:hover {
            background-color: #45a049;
        }

    /* Table Styling */
    .grid-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px auto;
    }

        .grid-table th,
        .grid-table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        .grid-table th {
            background-color: black;
            color: white;
        }

        .grid-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .grid-table tr:hover {
            background-color: #f1f1f1;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .btn {
        padding: 6px 12px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: 0.3s;
    }

    .btn-edit {
        background-color: #ff9800;
        color: white;
    }

        .btn-edit:hover {
            background-color: #ff9800;
        }

    .btn-delete {
        background-color: #f44336;
        color: white;
    }

        .btn-delete:hover {
            background-color: #e53935;
        }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 20px 0;
        gap: 10px;
    }

        .pagination button {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .pagination button:disabled {
                background-color: #ccc;
                cursor: not-allowed;
            }

        .pagination span {
            font-size: 16px;
            font-weight: bold;
        }

    .btn-success {
        background-color: #ff9800;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
    }

        .btn-success:hover {
            background-color: #ff9800;
        }

    .btn-danger {
        background-color: #f44336;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
    }

        .btn-danger:hover {
            background-color: #e53935;
        }

    .btn-sm {
        padding: 4px 8px;
        font-size: 14px;
    }

    .back-btn {
        background-color: aquamarine; /* Warm Brown */
        color: black; /* White text */
        border: none; /* No border */
        padding: 5px 20px; /* Adjust spacing */
        border-radius: 5px; /* Rounded corners */
        font-size: 16px; /* Adjust font size */
        cursor: pointer; /* Pointer cursor on hover */
        box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
        transition: background-color 0.3s ease, transform 0.2s ease; /* Smooth transition */
    }

        .back-btn:hover {
            background-color: azure; /* Darker Brown for hover */
            transform: scale(1.05); /* Slightly larger on hover */
        }

        .back-btn:active {
            background-color: #6c4f29; /* Even darker Brown for active state */
            transform: scale(0.95); /* Slightly smaller on click */
        }
</style>

<style>
    /* Modal Styling */
    .modal-content {
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .modal-header {
        background-color: #007bb5;
        color: white;
        border-bottom: 2px solid #ddd;
        padding: 15px;
        font-size: 18px;
        font-weight: bold;
    }

    .modal-body {
        padding: 20px;
        background-color: #f9f9f9;
        color: #333;
        font-size: 16px;
    }

    .modal-footer {
        padding: 15px;
        text-align: right;
        background-color: #f1f1f1;
        border-top: 1px solid #ddd;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border-radius: 4px;
        padding: 8px 16px;
        transition: background-color 0.3s;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .btn-primary {
        background-color: #007bb5;
        color: white;
        border-radius: 4px;
        padding: 8px 16px;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #005f8d;
        }

    .btn-danger {
        background-color: #f44336;
        color: white;
        border-radius: 4px;
        padding: 8px 16px;
        transition: background-color 0.3s;
    }

        .btn-danger:hover {
            background-color: #e53935;
        }

    /* Adding Custom Styling to Buttons inside the modal */
    .modal-footer button {
        font-size: 16px;
        padding: 10px 15px;
        border-radius: 6px;
        transition: transform 0.3s ease, background-color 0.3s ease;
    }

        .modal-footer button:hover {
            background-color: #ddd;
            transform: scale(1.05);
        }

        .modal-footer button:active {
            transform: scale(0.98);
        }

    /* Modal close button style */
    .modal-header .close {
        color: #fff;
        opacity: 1;
    }

        .modal-header .close:hover,
        .modal-header .close:focus {
            color: #fff;
            text-decoration: none;
            opacity: 0.7;
        }

    /* Confirmation Modal Styling */
    .modal-content.confirmation {
        background-color: #fafafa;
        border-left: 5px solid #f44336;
    }

        .modal-content.confirmation .modal-header {
            background-color: #f44336;
            color: white;
        }

        .modal-content.confirmation .modal-body {
            font-size: 18px;
            font-weight: 500;
            text-align: center;
        }

    /* Transition effects for modal */
    .modal.fade .modal-dialog {
        transform: scale(0.9);
        transition: transform 0.3s ease-in-out;
    }

    .modal.show .modal-dialog {
        transform: scale(1);
    }
</style>

<div class="header-actions">
    <input type="text" id="searchBox" class="search-box" placeholder="Search by State name...">
    <button class="btn-add" onclick="window.location.href='/State/State'">Add New State</button>
</div>

<table class="grid-table" id="gridTable">
    <thead>
        <tr>
            <th>State Name</th>
            <th>State Flag</th>
            <th>GST State Code</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var state in Model)
        {
            <tr id="state-@state.StateId">
                <td>@state.StateName</td>
                <td>@state.StateFlag</td>
                <td>@state.GSTStateCode</td>
                <td>
                    <button class="btn btn-edit btn-sm" onclick="openEditModal(@state.StateId, '@state.StateName', '@state.StateFlag', @state.GSTStateCode)">Edit</button>
                    <button class="btn btn-delete btn-sm" onclick="confirmDelete(@state.StateId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<button type="button" class="back-btn" onclick="location.href='@Url.Action("Success", "Account")'">
    Back
</button>

<!-- Pagination -->
<div class="pagination">
    @if (ViewBag.CurrentPage > 1)
    {
        <a href="@Url.Action("StateEditDelete", "State", new { page = ViewBag.CurrentPage - 1 })" class="btn btn-secondary">Back</a>
    }

    <span>Page @currentPage of @totalPages</span>

    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
    {
        <a href="@Url.Action("StateEditDelete", "State", new { page = ViewBag.CurrentPage + 1 })" class="btn btn-primary">Next</a>
    }
</div>



<!-- Modal for Edit -->
<div class="modal" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit State</h5>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="stateName">State Name</label>
                    <input type="text" class="form-control" id="stateName" />
                </div>
                <div class="form-group">
                    <label for="stateFlag">State Flag URL</label>
                    <input type="text" class="form-control" id="stateFlag" />
                </div>
                <div class="form-group">
                    <label for="gstStateCode">GST State Code</label>
                    <input type="number" class="form-control" id="gstStateCode" />
                </div>
            </div>
            <div class="modal-footer">
                <!-- Cancel button for Edit Modal -->
                <button type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close" onclick="$('#editModal').modal('hide')">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveChanges()">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation Modal for Delete -->
<div class="modal" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>

            </div>
            <div class="modal-body">
                Are you sure you want to delete this state?
            </div>
            <div class="modal-footer">
                <!-- Cancel button for Delete Modal -->
                <button type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close" onclick="$('#deleteModal').modal('hide')">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="deleteState()">OK</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>


        // Function to filter the states based on the search input
        $('#searchBox').on('input', function () {
            var searchTerm = $(this).val().toLowerCase(); // Get the search term and convert to lowercase
            $('#gridTable tbody tr').each(function () {
                var stateName = $(this).find('td').eq(0).text().toLowerCase(); // Get the State Name column text
                if (stateName.indexOf(searchTerm) > -1) {
                    $(this).show(); // Show the row if it matches the search term
                } else {
                    $(this).hide(); // Hide the row if it doesn't match the search term
                }
            });
        });

        var stateIdToDelete;

        function openEditModal(stateId, stateName, stateFlag, gstStateCode) {
            $('#editModal').modal('show');
            $('#stateName').val(stateName);
            $('#stateFlag').val(stateFlag);
            $('#gstStateCode').val(gstStateCode);

            window.stateIdToEdit = stateId;
        }

        function saveChanges() {
            var stateName = $('#stateName').val();
            var stateFlag = $('#stateFlag').val();
            var gstStateCode = $('#gstStateCode').val();

            $.ajax({
                url: '@Url.Action("UpdateState", "State")',
                type: 'POST',
                data: {
                    StateId: window.stateIdToEdit,
                    StateName: stateName,
                    StateFlag: stateFlag,
                    GSTStateCode: gstStateCode
                },
                success: function (response) {
                    if (response.success) {
                        $('#state-' + window.stateIdToEdit).find('td').eq(0).text(stateName);
                        $('#state-' + window.stateIdToEdit).find('td').eq(1).text(stateFlag);
                        $('#state-' + window.stateIdToEdit).find('td').eq(2).text(gstStateCode);
                        $('#editModal').modal('hide');
                    } else {
                        alert('Failed to update state');
                    }
                }
            });
        }

        function confirmDelete(stateId) {
            stateIdToDelete = stateId;
            $('#deleteModal').modal('show');
        }

        function deleteState() {
            $.ajax({
                url: '@Url.Action("DeleteState", "State")',
                type: 'POST',
                data: { StateId: stateIdToDelete },
                success: function (response) {
                    if (response.success) {
                        $('#state-' + stateIdToDelete).remove();
                        $('#deleteModal').modal('hide');
                    } else {
                        alert('Failed to delete state');
                    }
                }
            });
        }
    </script>
}
